name: Mise en place Ansible sur GoogleCloud

on:
  push:
    branches:
      - CI/CD-P51
  workflow_dispatch:

jobs:
  mise-a-jour-vm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Install Google Cloud CLI
        run: |
          sudo apt-get update && sudo apt-get install -y google-cloud-cli
          
      - name: SSH into VMs and Update System
        run: |
          for vm in k3s-master k3s-node-0 k3s-node-1 k3s-node-2; do
            gcloud compute ssh $vm --zone europe-west1-b --command "sudo dnf update -y" --quiet
          done

  installation-ansible:
    runs-on: ubuntu-latest
    needs: mise-a-jour-vm

    steps:
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Install Ansible on all VMs
        run: |
          for vm in k3s-master k3s-node-0 k3s-node-1 k3s-node-2; do
            gcloud compute ssh $vm --zone europe-west1-b --command "sudo dnf install -y epel-release && sudo dnf config-manager --set-enabled crb && sudo dnf install -y ansible" --quiet
          done

      - name: Configure Ansible inventory
        run: |
          echo "[k3s_cluster]" > inventory.ini
          echo "k3s-master ansible_host=10.0.0.3 ansible_user=ansible" >> inventory.ini
          echo "[k3s_nodes]" > inventory.ini
          echo "k3s-node-0 ansible_host=10.0.0.2 ansible_user=ansible" >> inventory.ini
          echo "k3s-node-1 ansible_host=10.0.0.5 ansible_user=ansible" >> inventory.ini
          echo "k3s-node-2 ansible_host=10.0.0.6 ansible_user=ansible" >> inventory.ini
          sudo mkdir -p /etc/ansible
          sudo mv inventory.ini /etc/ansible/inventory.ini

  frontend:
    runs-on: ubuntu-latest
    needs: installation-ansible

    steps:
      - name: Deploy Frontend Application
        run: |
          echo "Deploying Frontend..."

  backend:
    runs-on: ubuntu-latest
    needs: installation-ansible

    steps:
      - name: Deploy Backend Application
        run: |
          echo "Deploying Backend..."

  deploy-postgres:
      runs-on: ubuntu-latest
      needs: backend
  
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
  
        - name: Authenticate to GCP
          uses: google-github-actions/auth@v1
          with:
            credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

        - name: Copier le dossier Ansible sur k3s-master
          run: |
            gcloud compute scp --recurse ansible k3s-master:/home/ansible/ --zone europe-west1-b
            gcloud compute ssh k3s-master --zone europe-west1-b --command "sudo chown -R ansible:ansible /home/ansible"

  
  
        - name: Vérifier la connexion SSH entre k3s-master et les nœuds
          run: |
            gcloud compute ssh k3s-master --zone europe-west1-b --command "
              sudo -u ansible ssh -o StrictHostKeyChecking=no ansible@10.0.0.2 'echo SSH vers k3s-node-0 OK'
              sudo -u ansible ssh -o StrictHostKeyChecking=no ansible@10.0.0.5 'echo SSH vers k3s-node-1 OK'
              sudo -u ansible ssh -o StrictHostKeyChecking=no ansible@10.0.0.6 'echo SSH vers k3s-node-2 OK'
            "
  
        - name: Lancer le playbook Ansible pour PostgreSQL HA
          run: |
            gcloud compute ssh k3s-master --zone europe-west1-b --command "
              sudo -u ansible ansible-playbook -i /etc/ansible/inventory.ini /home/ansible/playbook-postgres.yml
            "
